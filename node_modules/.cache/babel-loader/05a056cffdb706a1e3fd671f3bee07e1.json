{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\DEV\\\\Projet js\\\\site dofus temporise 5\\\\src\\\\component\\\\Input_craft.js\",\n    _s = $RefreshSig$();\n\n// import TextField from '@material-ui/core/TextField';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import InputBase from \"@material-ui/core/InputBase\";\n// import { InputAdornment } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n//       // Default transform is \"translate(14px, 20px) scale(1)\"\"\n//       // This lines up the label with the initial cursor position in the input\n//       // after changing its padding-left.\n//       transform: \"translate(34px, 20px) scale(1);\"\n//     }\n//   },\n//   inputRoot: {\n//     color: \"purple\",\n//     // This matches the specificity of the default styles at https://github.com/mui-org/material-ui/blob/v4.11.3/packages/material-ui-lab/src/Autocomplete/Autocomplete.js#L90\n//     '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n//       // Default left padding is 6px\n//       paddingLeft: 26\n//     },\n//     \"& .MuiOutlinedInput-notchedOutline\": {\n//       borderColor: \"green\"\n//     },\n//     \"&:hover .MuiOutlinedInput-notchedOutline\": {\n//       borderColor: \"red\"\n//     },\n//     \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n//       borderColor: \"purple\"\n//     }\n//   }\n// }));\n// const top100Films = [\n//     { title: 'The Shawshank Redemption', year: 1994 },\n//     { title: 'The Godfather', year: 1972 },\n//     { title: 'The Godfather: Part II', year: 1974 },\n//     { title: 'The Dark Knight', year: 2008 }\n//   ];\n// //   function App() {\n// //     // return <TextField defaultValue=\"default text\" InputProps={{ classes }} />;\n// //   }\n// const InputCraft = () => {\n//     const classes = useStyles();\n//     const Show = ()=>{\n//         let Liste_items =[]\n//         for (let i=0;i<5;i++){\n//             i !== 4 ? Liste_items.push(<><input className=\"input\"/><div className=\"operator-style\">+</div></>) : Liste_items.push(<input className=\"input\"/>)\n//         }\n//         return Liste_items\n//     }\n//     return (\n//         <div className=\"menu-craft\">\n//             <div className=\"container-input-craft\" >\n//                 {\n//                 <Autocomplete\n//                     id=\"combo-box-demo\"\n//                     className=\"input\"\n//                     options={top100Films}\n//                     getOptionLabel={(option) => option.title}\n//                     // style={{ width: 300 }}\n//                     style={{ border: \"none\" }}\n//                     // \n//                     renderInput={(params) => <TextField {...params} label=\"Carte\" variant=\"outlined\" />}\n//                 />\n//                     //Show()\n//                 }\n//             </div>\n//             <div className=\"operator-style\" style={{\"marginLeft\": \"5%\", \"fontSize\":\"2vw\"}}>=</div>\n//             <input className=\"input\" id=\"input-items\" ></input>\n//         </div>\n//     )\n// }\n// export default InputCraft\n// import React from \"react\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\n// // import { makeStyles } from \"@material-ui/core/styles\";\n// const Input_craft = () => {\n//   return (\n//     <>\n//       <Autocomplete\n//         id=\"combo-box-demo\"\n//         options={top100Films}\n//         getOptionLabel={(option) => option.title}\n//         style={{ width: 200 , \"border-radius\":\"70px\"}}\n//         renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n//       />\n//     </>\n//   )\n// }\n// export default Input_craft\n// const useStyles = makeStyles((theme) => ({\n//   root: {\"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {transform: \"translate(34px, 20px) scale(1);\"}},\n//   inputRoot: {\n//     color: \"purple\",\n//     '&[class*=\"MuiOutlinedInput-root input\"] .MuiAutocomplete-input:first-child': {paddingLeft: \"none\"},\n//     \"& .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"},\n//     \"&:hover .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"},\n//     \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"}}\n// }));\n// export default function InputCraft() {\n//   const classes = useStyles();\n//   return (\n//     <Autocomplete\n//       id=\"combo-box-demo\"\n//       classes={classes}\n//       className=\" autocomplete\"\n//       options={top100Films}\n//       getOptionLabel={(option) => option.title}\n//       renderInput={(params) => {\n//         return (\n//           <TextField {...params} className=\"inputAuto\" placeholder=\"test\" variant=\"outlined\" />\n//         );\n//       }}\n//     />\n//   );\n// }\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n// const top100Films = [\n//   { title: \"The Shawshank Redemption\", year: 1994 },\n//   { title: \"The Godfather\", year: 1972 },\n//   { title: \"The Godfather: Part II\", year: 1974 },\n//   { title: \"The Dark Knight\", year: 2008 },\n//   { title: \"12 Angry Men\", year: 1957 },\n//   { title: \"Schindler's List\", year: 1993 }\n// ];\n// const InputCraft = () => {\n// }\n// export default InputCraft\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  listbox: {\n    width: 200,\n    margin: 0,\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 200,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer'\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}));\nexport default function UseAutocomplete() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    getOptionProps,\n    groupedOptions\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: option => option.title\n  }); //   return (\n  //           <input className={classes.input} {...getInputProps()} />\n  //         {groupedOptions.length > 0 ? (\n  //           <ul className={classes.listbox} {...getListboxProps()}>\n  //             {groupedOptions.map((option, index) => (\n  //               <li {...getOptionProps({ option, index })}>{option.title}</li>\n  //             ))}\n  //           </ul>\n  //         ) : null}\n  //   );\n  // }\n\n  const Show = () => {\n    let Liste_items = [];\n\n    for (let i = 0; i < 5; i++) {\n      i !== 4 ? Liste_items.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operator-style\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true)) : Liste_items.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 125\n      }, this));\n    }\n\n    return Liste_items;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-craft\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-input-craft\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            children: \"useAutocomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), groupedOptions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.listbox,\n          children: groupedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", { ...getOptionProps({\n              option,\n              index\n            }),\n            children: option.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"operator-style\",\n      style: {\n        \"margin-left\": \"5%\",\n        \"font-size\": \"2vw\"\n      },\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      id: \"input-items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UseAutocomplete, \"O5mgE/rHLV15h21WUVwxLstCyfg=\", false, function () {\n  return [useStyles, useAutocomplete];\n});\n\n_c = UseAutocomplete;\n;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}]; // const InputCraft = () => {\n//   const Show = ()=>{\n//       let Liste_items =[]\n//       for (let i=0;i<5;i++){\n//           i !== 4 ? Liste_items.push(<><input className=\"input\"/><div className=\"operator-style\">+</div></>) : Liste_items.push(<input className=\"input\"/>)\n//       }\n//       return Liste_items\n//   }\n//   return (\n//       <div className=\"menu-craft\">\n//           <div className=\"container-input-craft\" >\n//               {\n//                   Show()\n//               }\n//           </div>\n//           <div className=\"operator-style\" style={{\"margin-left\": \"5%\", \"font-size\":\"2vw\"}}>=</div>\n//           <input className=\"input\" id=\"input-items\" ></input>\n//       </div>\n//   )\n\nvar _c;\n\n$RefreshReg$(_c, \"UseAutocomplete\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Desktop/DEV/Projet js/site dofus temporise 5/src/component/Input_craft.js"],"names":["React","useAutocomplete","makeStyles","useStyles","theme","listbox","width","margin","padding","zIndex","position","listStyle","backgroundColor","palette","background","paper","overflow","maxHeight","border","color","cursor","UseAutocomplete","classes","getOptionProps","groupedOptions","id","options","top100Films","getOptionLabel","option","title","Show","Liste_items","i","push","label","input","length","map","index","year"],"mappingskB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,OAAO,EAAE,CAHF;AAIPC,IAAAA,MAAM,EAAE,CAJD;AAKPC,IAAAA,QAAQ,EAAE,UALH;AAMPC,IAAAA,SAAS,EAAE,MANJ;AAOPC,IAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,UAAd,CAAyBC,KAPnC;AAQPC,IAAAA,QAAQ,EAAE,MARH;AASPC,IAAAA,SAAS,EAAE,GATJ;AAUPC,IAAAA,MAAM,EAAE,2BAVD;AAWP,+BAA2B;AACzBN,MAAAA,eAAe,EAAE,SADQ;AAEzBO,MAAAA,KAAK,EAAE,OAFkB;AAGzBC,MAAAA,MAAM,EAAE;AAHiB,KAXpB;AAgBP,mBAAe;AACbR,MAAAA,eAAe,EAAE,SADJ;AAEbO,MAAAA,KAAK,EAAE;AAFM;AAhBR;AAD8B,CAAZ,CAAD,CAA5B;AAwBA,eAAe,SAASE,eAAT,GAA2B;AAAA;;AACxC,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM;AACJoB,IAAAA,cADI;AAEJC,IAAAA;AAFI,MAGFvB,eAAe,CAAC;AAClBwB,IAAAA,EAAE,EAAE,uBADc;AAElBC,IAAAA,OAAO,EAAEC,WAFS;AAGlBC,IAAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACC;AAHjB,GAAD,CAHnB,CAFwC,CAW1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,IAAI,GAAG,MAAI;AACf,QAAIC,WAAW,GAAE,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACjBA,MAAAA,CAAC,KAAK,CAAN,GAAUD,WAAW,CAACE,IAAZ,eAAiB;AAAA,gCAAE;AAAO,UAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAAF,eAA4B;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAA,sBAAjB,CAAV,GAAqGF,WAAW,CAACE,IAAZ,eAAiB;AAAO,QAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAjB,CAArG;AACH;;AACD,WAAOF,WAAP;AACD,GAND;;AAOA,sBACM;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,SAAS,EAAEV,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAO,YAAA,SAAS,EAAEb,OAAO,CAACc;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGZ,cAAc,CAACa,MAAf,GAAwB,CAAxB,gBACC;AAAI,UAAA,SAAS,EAAEf,OAAO,CAACjB,OAAvB;AAAA,oBACGmB,cAAc,CAACc,GAAf,CAAmB,CAACT,MAAD,EAASU,KAAT,kBAClB,mBAAQhB,cAAc,CAAC;AAAEM,cAAAA,MAAF;AAAUU,cAAAA;AAAV,aAAD,CAAtB;AAAA,sBAA4CV,MAAM,CAACC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD,GAMG,IAbN;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAAC,uBAAe,IAAhB;AAAsB,qBAAY;AAAlC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,EAAE,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAuBC;;GApDuBT,e;UACNlB,S,EAIZF,e;;;KALkBoB,e;AAoDvB;AACD,MAAMM,WAAW,GAAG,CAClB;AAAEG,EAAAA,KAAK,EAAE,0BAAT;AAAqCU,EAAAA,IAAI,EAAE;AAA3C,CADkB,EAElB;AAAEV,EAAAA,KAAK,EAAE,eAAT;AAA0BU,EAAAA,IAAI,EAAE;AAAhC,CAFkB,EAGlB;AAAEV,EAAAA,KAAK,EAAE,wBAAT;AAAmCU,EAAAA,IAAI,EAAE;AAAzC,CAHkB,EAIlB;AAAEV,EAAAA,KAAK,EAAE,iBAAT;AAA4BU,EAAAA,IAAI,EAAE;AAAlC,CAJkB,EAKlB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CALkB,EAMlB;AAAEV,EAAAA,KAAK,EAAE,kBAAT;AAA6BU,EAAAA,IAAI,EAAE;AAAnC,CANkB,EAOlB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAPkB,EAQlB;AAAEV,EAAAA,KAAK,EAAE,+CAAT;AAA0DU,EAAAA,IAAI,EAAE;AAAhE,CARkB,EASlB;AAAEV,EAAAA,KAAK,EAAE,gCAAT;AAA2CU,EAAAA,IAAI,EAAE;AAAjD,CATkB,EAUlB;AAAEV,EAAAA,KAAK,EAAE,YAAT;AAAuBU,EAAAA,IAAI,EAAE;AAA7B,CAVkB,EAWlB;AAAEV,EAAAA,KAAK,EAAE,mDAAT;AAA8DU,EAAAA,IAAI,EAAE;AAApE,CAXkB,EAYlB;AAAEV,EAAAA,KAAK,EAAE,gDAAT;AAA2DU,EAAAA,IAAI,EAAE;AAAjE,CAZkB,EAalB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAbkB,EAclB;AAAEV,EAAAA,KAAK,EAAE,WAAT;AAAsBU,EAAAA,IAAI,EAAE;AAA5B,CAdkB,EAelB;AAAEV,EAAAA,KAAK,EAAE,uCAAT;AAAkDU,EAAAA,IAAI,EAAE;AAAxD,CAfkB,EAgBlB;AAAEV,EAAAA,KAAK,EAAE,iCAAT;AAA4CU,EAAAA,IAAI,EAAE;AAAlD,CAhBkB,EAiBlB;AAAEV,EAAAA,KAAK,EAAE,YAAT;AAAuBU,EAAAA,IAAI,EAAE;AAA7B,CAjBkB,EAkBlB;AAAEV,EAAAA,KAAK,EAAE,YAAT;AAAuBU,EAAAA,IAAI,EAAE;AAA7B,CAlBkB,EAmBlB;AAAEV,EAAAA,KAAK,EAAE,eAAT;AAA0BU,EAAAA,IAAI,EAAE;AAAhC,CAnBkB,EAoBlB;AAAEV,EAAAA,KAAK,EAAE,oCAAT;AAA+CU,EAAAA,IAAI,EAAE;AAArD,CApBkB,EAqBlB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CArBkB,EAsBlB;AAAEV,EAAAA,KAAK,EAAE,OAAT;AAAkBU,EAAAA,IAAI,EAAE;AAAxB,CAtBkB,EAuBlB;AAAEV,EAAAA,KAAK,EAAE,0BAAT;AAAqCU,EAAAA,IAAI,EAAE;AAA3C,CAvBkB,EAwBlB;AAAEV,EAAAA,KAAK,EAAE,uBAAT;AAAkCU,EAAAA,IAAI,EAAE;AAAxC,CAxBkB,EAyBlB;AAAEV,EAAAA,KAAK,EAAE,mBAAT;AAA8BU,EAAAA,IAAI,EAAE;AAApC,CAzBkB,EA0BlB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CA1BkB,EA2BlB;AAAEV,EAAAA,KAAK,EAAE,wBAAT;AAAmCU,EAAAA,IAAI,EAAE;AAAzC,CA3BkB,EA4BlB;AAAEV,EAAAA,KAAK,EAAE,eAAT;AAA0BU,EAAAA,IAAI,EAAE;AAAhC,CA5BkB,EA6BlB;AAAEV,EAAAA,KAAK,EAAE,qBAAT;AAAgCU,EAAAA,IAAI,EAAE;AAAtC,CA7BkB,EA8BlB;AAAEV,EAAAA,KAAK,EAAE,8BAAT;AAAyCU,EAAAA,IAAI,EAAE;AAA/C,CA9BkB,EA+BlB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CA/BkB,EAgClB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAhCkB,EAiClB;AAAEV,EAAAA,KAAK,EAAE,YAAT;AAAuBU,EAAAA,IAAI,EAAE;AAA7B,CAjCkB,EAkClB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CAlCkB,EAmClB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CAnCkB,EAoClB;AAAEV,EAAAA,KAAK,EAAE,gBAAT;AAA2BU,EAAAA,IAAI,EAAE;AAAjC,CApCkB,EAqClB;AAAEV,EAAAA,KAAK,EAAE,kBAAT;AAA6BU,EAAAA,IAAI,EAAE;AAAnC,CArCkB,EAsClB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAtCkB,EAuClB;AAAEV,EAAAA,KAAK,EAAE,yBAAT;AAAoCU,EAAAA,IAAI,EAAE;AAA1C,CAvCkB,EAwClB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CAxCkB,EAyClB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CAzCkB,EA0ClB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CA1CkB,EA2ClB;AAAEV,EAAAA,KAAK,EAAE,4BAAT;AAAuCU,EAAAA,IAAI,EAAE;AAA7C,CA3CkB,EA4ClB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CA5CkB,EA6ClB;AAAEV,EAAAA,KAAK,EAAE,UAAT;AAAqBU,EAAAA,IAAI,EAAE;AAA3B,CA7CkB,EA8ClB;AAAEV,EAAAA,KAAK,EAAE,WAAT;AAAsBU,EAAAA,IAAI,EAAE;AAA5B,CA9CkB,EA+ClB;AAAEV,EAAAA,KAAK,EAAE,SAAT;AAAoBU,EAAAA,IAAI,EAAE;AAA1B,CA/CkB,EAgDlB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAhDkB,EAiDlB;AAAEV,EAAAA,KAAK,EAAE,eAAT;AAA0BU,EAAAA,IAAI,EAAE;AAAhC,CAjDkB,EAkDlB;AAAEV,EAAAA,KAAK,EAAE,gBAAT;AAA2BU,EAAAA,IAAI,EAAE;AAAjC,CAlDkB,EAmDlB;AAAEV,EAAAA,KAAK,EAAE,OAAT;AAAkBU,EAAAA,IAAI,EAAE;AAAxB,CAnDkB,EAoDlB;AAAEV,EAAAA,KAAK,EAAE,kBAAT;AAA6BU,EAAAA,IAAI,EAAE;AAAnC,CApDkB,EAqDlB;AAAEV,EAAAA,KAAK,EAAE,sEAAT;AAAiFU,EAAAA,IAAI,EAAE;AAAvF,CArDkB,EAsDlB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CAtDkB,EAuDlB;AAAEV,EAAAA,KAAK,EAAE,iBAAT;AAA4BU,EAAAA,IAAI,EAAE;AAAlC,CAvDkB,EAwDlB;AAAEV,EAAAA,KAAK,EAAE,qBAAT;AAAgCU,EAAAA,IAAI,EAAE;AAAtC,CAxDkB,EAyDlB;AAAEV,EAAAA,KAAK,EAAE,wBAAT;AAAmCU,EAAAA,IAAI,EAAE;AAAzC,CAzDkB,EA0DlB;AAAEV,EAAAA,KAAK,EAAE,gBAAT;AAA2BU,EAAAA,IAAI,EAAE;AAAjC,CA1DkB,EA2DlB;AAAEV,EAAAA,KAAK,EAAE,kBAAT;AAA6BU,EAAAA,IAAI,EAAE;AAAnC,CA3DkB,EA4DlB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CA5DkB,EA6DlB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CA7DkB,EA8DlB;AAAEV,EAAAA,KAAK,EAAE,iBAAT;AAA4BU,EAAAA,IAAI,EAAE;AAAlC,CA9DkB,EA+DlB;AAAEV,EAAAA,KAAK,EAAE,uBAAT;AAAkCU,EAAAA,IAAI,EAAE;AAAxC,CA/DkB,EAgElB;AAAEV,EAAAA,KAAK,EAAE,mBAAT;AAA8BU,EAAAA,IAAI,EAAE;AAApC,CAhEkB,EAiElB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CAjEkB,EAkElB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CAlEkB,EAmElB;AAAEV,EAAAA,KAAK,EAAE,6BAAT;AAAwCU,EAAAA,IAAI,EAAE;AAA9C,CAnEkB,EAoElB;AAAEV,EAAAA,KAAK,EAAE,6BAAT;AAAwCU,EAAAA,IAAI,EAAE;AAA9C,CApEkB,EAqElB;AAAEV,EAAAA,KAAK,EAAE,UAAT;AAAqBU,EAAAA,IAAI,EAAE;AAA3B,CArEkB,EAsElB;AAAEV,EAAAA,KAAK,EAAE,cAAT;AAAyBU,EAAAA,IAAI,EAAE;AAA/B,CAtEkB,EAuElB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CAvEkB,EAwElB;AAAEV,EAAAA,KAAK,EAAE,SAAT;AAAoBU,EAAAA,IAAI,EAAE;AAA1B,CAxEkB,EAyElB;AAAEV,EAAAA,KAAK,EAAE,4CAAT;AAAuDU,EAAAA,IAAI,EAAE;AAA7D,CAzEkB,EA0ElB;AAAEV,EAAAA,KAAK,EAAE,gBAAT;AAA2BU,EAAAA,IAAI,EAAE;AAAjC,CA1EkB,EA2ElB;AAAEV,EAAAA,KAAK,EAAE,YAAT;AAAuBU,EAAAA,IAAI,EAAE;AAA7B,CA3EkB,EA4ElB;AAAEV,EAAAA,KAAK,EAAE,GAAT;AAAcU,EAAAA,IAAI,EAAE;AAApB,CA5EkB,EA6ElB;AAAEV,EAAAA,KAAK,EAAE,qBAAT;AAAgCU,EAAAA,IAAI,EAAE;AAAtC,CA7EkB,EA8ElB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CA9EkB,EA+ElB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CA/EkB,EAgFlB;AAAEV,EAAAA,KAAK,EAAE,qBAAT;AAAgCU,EAAAA,IAAI,EAAE;AAAtC,CAhFkB,EAiFlB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CAjFkB,EAkFlB;AAAEV,EAAAA,KAAK,EAAE,oBAAT;AAA+BU,EAAAA,IAAI,EAAE;AAArC,CAlFkB,EAmFlB;AAAEV,EAAAA,KAAK,EAAE,kBAAT;AAA6BU,EAAAA,IAAI,EAAE;AAAnC,CAnFkB,EAoFlB;AAAEV,EAAAA,KAAK,EAAE,uCAAT;AAAkDU,EAAAA,IAAI,EAAE;AAAxD,CApFkB,EAqFlB;AAAEV,EAAAA,KAAK,EAAE,SAAT;AAAoBU,EAAAA,IAAI,EAAE;AAA1B,CArFkB,EAsFlB;AAAEV,EAAAA,KAAK,EAAE,uBAAT;AAAkCU,EAAAA,IAAI,EAAE;AAAxC,CAtFkB,EAuFlB;AAAEV,EAAAA,KAAK,EAAE,aAAT;AAAwBU,EAAAA,IAAI,EAAE;AAA9B,CAvFkB,EAwFlB;AAAEV,EAAAA,KAAK,EAAE,OAAT;AAAkBU,EAAAA,IAAI,EAAE;AAAxB,CAxFkB,EAyFlB;AAAEV,EAAAA,KAAK,EAAE,mBAAT;AAA8BU,EAAAA,IAAI,EAAE;AAApC,CAzFkB,EA0FlB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CA1FkB,EA2FlB;AAAEV,EAAAA,KAAK,EAAE,WAAT;AAAsBU,EAAAA,IAAI,EAAE;AAA5B,CA3FkB,EA4FlB;AAAEV,EAAAA,KAAK,EAAE,uBAAT;AAAkCU,EAAAA,IAAI,EAAE;AAAxC,CA5FkB,EA6FlB;AAAEV,EAAAA,KAAK,EAAE,qBAAT;AAAgCU,EAAAA,IAAI,EAAE;AAAtC,CA7FkB,EA8FlB;AAAEV,EAAAA,KAAK,EAAE,WAAT;AAAsBU,EAAAA,IAAI,EAAE;AAA5B,CA9FkB,EA+FlB;AAAEV,EAAAA,KAAK,EAAE,iBAAT;AAA4BU,EAAAA,IAAI,EAAE;AAAlC,CA/FkB,EAgGlB;AAAEV,EAAAA,KAAK,EAAE,SAAT;AAAoBU,EAAAA,IAAI,EAAE;AAA1B,CAhGkB,EAiGlB;AAAEV,EAAAA,KAAK,EAAE,sBAAT;AAAiCU,EAAAA,IAAI,EAAE;AAAvC,CAjGkB,EAkGlB;AAAEV,EAAAA,KAAK,EAAE,QAAT;AAAmBU,EAAAA,IAAI,EAAE;AAAzB,CAlGkB,EAmGlB;AAAEV,EAAAA,KAAK,EAAE,UAAT;AAAqBU,EAAAA,IAAI,EAAE;AAA3B,CAnGkB,EAoGlB;AAAEV,EAAAA,KAAK,EAAE,iCAAT;AAA4CU,EAAAA,IAAI,EAAE;AAAlD,CApGkB,CAApB,C,CA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n\r\n\r\n\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import InputBase from \"@material-ui/core/InputBase\";\r\n// import { InputAdornment } from \"@material-ui/core\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\r\n//       // Default transform is \"translate(14px, 20px) scale(1)\"\"\r\n//       // This lines up the label with the initial cursor position in the input\r\n//       // after changing its padding-left.\r\n//       transform: \"translate(34px, 20px) scale(1);\"\r\n//     }\r\n//   },\r\n//   inputRoot: {\r\n//     color: \"purple\",\r\n//     // This matches the specificity of the default styles at https://github.com/mui-org/material-ui/blob/v4.11.3/packages/material-ui-lab/src/Autocomplete/Autocomplete.js#L90\r\n//     '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\r\n//       // Default left padding is 6px\r\n//       paddingLeft: 26\r\n//     },\r\n//     \"& .MuiOutlinedInput-notchedOutline\": {\r\n//       borderColor: \"green\"\r\n//     },\r\n//     \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n//       borderColor: \"red\"\r\n//     },\r\n//     \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n//       borderColor: \"purple\"\r\n//     }\r\n//   }\r\n// }));\r\n// const top100Films = [\r\n//     { title: 'The Shawshank Redemption', year: 1994 },\r\n//     { title: 'The Godfather', year: 1972 },\r\n//     { title: 'The Godfather: Part II', year: 1974 },\r\n//     { title: 'The Dark Knight', year: 2008 }\r\n//   ];\r\n// //   function App() {\r\n    \r\n// //     // return <TextField defaultValue=\"default text\" InputProps={{ classes }} />;\r\n// //   }\r\n// const InputCraft = () => {\r\n//     const classes = useStyles();\r\n    \r\n//     const Show = ()=>{\r\n//         let Liste_items =[]\r\n//         for (let i=0;i<5;i++){\r\n//             i !== 4 ? Liste_items.push(<><input className=\"input\"/><div className=\"operator-style\">+</div></>) : Liste_items.push(<input className=\"input\"/>)\r\n//         }\r\n//         return Liste_items\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"menu-craft\">\r\n//             <div className=\"container-input-craft\" >\r\n//                 {\r\n                \r\n//                 <Autocomplete\r\n//                     id=\"combo-box-demo\"\r\n                    \r\n//                     className=\"input\"\r\n//                     options={top100Films}\r\n//                     getOptionLabel={(option) => option.title}\r\n//                     // style={{ width: 300 }}\r\n//                     style={{ border: \"none\" }}\r\n//                     // \r\n//                     renderInput={(params) => <TextField {...params} label=\"Carte\" variant=\"outlined\" />}\r\n//                 />\r\n//                     //Show()\r\n//                 }\r\n//             </div>\r\n//             <div className=\"operator-style\" style={{\"marginLeft\": \"5%\", \"fontSize\":\"2vw\"}}>=</div>\r\n//             <input className=\"input\" id=\"input-items\" ></input>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default InputCraft\r\n\r\n\r\n// import React from \"react\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// // import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// const Input_craft = () => {\r\n//   return (\r\n//     <>\r\n//       <Autocomplete\r\n//         id=\"combo-box-demo\"\r\n//         options={top100Films}\r\n//         getOptionLabel={(option) => option.title}\r\n//         style={{ width: 200 , \"border-radius\":\"70px\"}}\r\n//         renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Input_craft\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {transform: \"translate(34px, 20px) scale(1);\"}},\r\n//   inputRoot: {\r\n//     color: \"purple\",\r\n//     '&[class*=\"MuiOutlinedInput-root input\"] .MuiAutocomplete-input:first-child': {paddingLeft: \"none\"},\r\n//     \"& .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"},\r\n//     \"&:hover .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"},\r\n//     \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {borderStyle: \"none\"}}\r\n\r\n// }));\r\n\r\n// export default function InputCraft() {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <Autocomplete\r\n//       id=\"combo-box-demo\"\r\n//       classes={classes}\r\n//       className=\" autocomplete\"\r\n//       options={top100Films}\r\n//       getOptionLabel={(option) => option.title}\r\n//       renderInput={(params) => {\r\n//         return (\r\n//           <TextField {...params} className=\"inputAuto\" placeholder=\"test\" variant=\"outlined\" />\r\n//         );\r\n//       }}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\n// const top100Films = [\r\n//   { title: \"The Shawshank Redemption\", year: 1994 },\r\n//   { title: \"The Godfather\", year: 1972 },\r\n//   { title: \"The Godfather: Part II\", year: 1974 },\r\n//   { title: \"The Dark Knight\", year: 2008 },\r\n//   { title: \"12 Angry Men\", year: 1957 },\r\n//   { title: \"Schindler's List\", year: 1993 }\r\n// ];\r\n\r\n// const InputCraft = () => {\r\n// }\r\n\r\n// export default InputCraft\r\n\r\n/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listbox: {\r\n    width: 200,\r\n    margin: 0,\r\n    padding: 0,\r\n    zIndex: 1,\r\n    position: 'absolute',\r\n    listStyle: 'none',\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n    maxHeight: 200,\r\n    border: '1px solid rgba(0,0,0,.25)',\r\n    '& li[data-focus=\"true\"]': {\r\n      backgroundColor: '#4a8df6',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n    },\r\n    '& li:active': {\r\n      backgroundColor: '#2977f5',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UseAutocomplete() {\r\n  const classes = useStyles();\r\n  const {\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: 'use-autocomplete-demo',\r\n    options: top100Films,\r\n    getOptionLabel: (option) => option.title,\r\n  });\r\n\r\n//   return (\r\n//           <input className={classes.input} {...getInputProps()} />\r\n//         {groupedOptions.length > 0 ? (\r\n//           <ul className={classes.listbox} {...getListboxProps()}>\r\n//             {groupedOptions.map((option, index) => (\r\n//               <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n//             ))}\r\n//           </ul>\r\n//         ) : null}\r\n//   );\r\n// }\r\nconst Show = ()=>{\r\n  let Liste_items =[]\r\n  for (let i=0;i<5;i++){\r\n      i !== 4 ? Liste_items.push(<><input className=\"input\"/><div className=\"operator-style\">+</div></>) : Liste_items.push(<input className=\"input\"/>)\r\n  }\r\n  return Liste_items\r\n}\r\nreturn (\r\n      <div className=\"menu-craft\">\r\n          <div className=\"container-input-craft\" >\r\n              <>\r\n                <div >\r\n                  <label className={classes.label} >\r\n                    useAutocomplete\r\n                  </label>\r\n                  <input className={classes.input} />\r\n                </div>\r\n                {groupedOptions.length > 0 ? (\r\n                  <ul className={classes.listbox} >\r\n                    {groupedOptions.map((option, index) => (\r\n                      <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n                    ))}\r\n                  </ul>\r\n                ) : null}\r\n              </>\r\n          </div>\r\n          <div className=\"operator-style\" style={{\"margin-left\": \"5%\", \"font-size\":\"2vw\"}}>=</div>\r\n          <input className=\"input\" id=\"input-items\" ></input>\r\n      </div>\r\n  );\r\n};\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n\r\n\r\n\r\n\r\n\r\n// const InputCraft = () => {\r\n//   const Show = ()=>{\r\n//       let Liste_items =[]\r\n//       for (let i=0;i<5;i++){\r\n//           i !== 4 ? Liste_items.push(<><input className=\"input\"/><div className=\"operator-style\">+</div></>) : Liste_items.push(<input className=\"input\"/>)\r\n//       }\r\n//       return Liste_items\r\n//   }\r\n\r\n//   return (\r\n//       <div className=\"menu-craft\">\r\n//           <div className=\"container-input-craft\" >\r\n//               {\r\n//                   Show()\r\n//               }\r\n//           </div>\r\n//           <div className=\"operator-style\" style={{\"margin-left\": \"5%\", \"font-size\":\"2vw\"}}>=</div>\r\n//           <input className=\"input\" id=\"input-items\" ></input>\r\n//       </div>\r\n//   )"]},"metadata":{},"sourceType":"module"}