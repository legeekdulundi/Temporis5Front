{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\DEV\\\\Projet js\\\\site dofus temporise 5\\\\src\\\\Manager.js\",\n    _s = $RefreshSig$();\n\nimport HomePage from \"./Pages/HomePage\";\nimport { useState, useEffect } from 'react';\nimport DBPage from \"./Pages/DBPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Manager() {\n  _s();\n\n  const [RecetteRecherche, setRecetteRecherche] = useState([]);\n  const [ListItem, setListItem] = useState([]);\n  const [ListeCarte, setListeCarte] = useState([]);\n  const [RequestStatus, setRequestStatus] = useState(0);\n  const [RequestStatusFrom, setRequestStatusFrom] = useState('');\n  const [ListeRecette, setListeRecette] = useState([]);\n  const [NbrRequest, setNbrRequest] = useState(0); // body: JSON.stringify({ title: 'React POST Request Example' })\n\n  useEffect(() => {\n    GetListItem();\n    GetListCarte();\n    GetListeRecette(\"GetNewCraft/\");\n  }, []);\n\n  async function GetListItem() {\n    fetch('http://localhost:8888/GetItemDTO/', {\n      method: 'get',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(function (res) {\n      // res.items.\n      res.items.forEach(element => {\n        element.name = element.name.replaceAll('_', ' '); // element.name.\n      });\n      setListItem(res.items);\n    });\n  }\n\n  async function GetListCarte() {\n    fetch('http://localhost:8888/GetCarte/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(function (res) {\n      // res.items.\n      setListeCarte(res.Carte);\n    });\n  }\n\n  function NewCraft(Craft) {\n    fetch('http://localhost:8888/AddCraft/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Craft)\n    }).then(res => res.json()).then(function (res) {\n      console.log(res);\n      setRequestStatusFrom(res.Api);\n      setRequestStatus(res.statut);\n      setNbrRequest(NbrRequest + 1);\n    });\n  }\n\n  function GetListeRecette(Url) {\n    fetch('http://localhost:8888/' + Url, {\n      method: 'get',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(function (res) {\n      // res.items.\n      setListeRecette(res.listeCraft);\n    });\n  }\n\n  function AddCarte(Param) {\n    fetch('http://localhost:8888/AddCarte/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Param)\n    }).then(res => res.json()).then(function (res) {\n      if (res.statut === 200) {\n        GetListCarte();\n      }\n    });\n  }\n\n  function GetRecetteWithCarte(Param) {\n    fetch('http://localhost:8888/GetCraftCarte/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Param)\n    }).then(res => res.json()).then(function (res) {\n      if (res.statut === 200) {\n        setListeRecette(res.listeCraft);\n      } else setListeRecette([]);\n    });\n  }\n\n  function GetRecetteWithItem(Param) {\n    fetch('http://localhost:8888/GetCraft/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Param)\n    }).then(res => res.json()).then(function (res) {\n      if (res.statut === 200) setListeRecette(res.listeCraft);else setListeRecette([]);\n    });\n  }\n\n  function ResetStatus() {\n    setRequestStatus(0);\n  }\n\n  function Rechercherecette(Item) {\n    fetch('http://localhost:8888/GetCraft/', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Item)\n    }).then(res => res.json()).then(function (res) {\n      // if(RequestStatus===0)\n      console.log(res);\n\n      if (res.statut !== 400) {\n        setRecetteRecherche(res.listeCraft[0]);\n        console.log(res.listeCraft[0]);\n      }\n\n      setRequestStatusFrom(res.Api);\n      setRequestStatus(res.statut);\n      setNbrRequest(NbrRequest + 1);\n    });\n  }\n\n  function DeleteItem(Item) {\n    console.log(\"mqslkdfmqslkd\");\n    fetch('http://localhost:8888/DeleteCraft/', {\n      method: 'delete',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Item)\n    }).then(res => res.json()).then(function (res) {\n      if (RequestStatus === 0) {\n        if (res.statut !== 400) GetListeRecette(\"GetNewCraft/\");\n      }\n    });\n  }\n\n  function ModifItem(Item) {\n    console.log(\"Modif item\");\n    fetch('http://localhost:8888/ChangeCtaft/', {\n      method: 'put',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(Item)\n    }).then(res => res.json()).then(function (res) {\n      // if(res.statut!==400)\n      GetListeRecette(\"GetNewCraft/\");\n    });\n  } // RefreshPage={GetListeRecette(\"GetNewCraft/\")}\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(HomePage, {\n          NewCraft: NewCraft,\n          NbrRequest: NbrRequest,\n          ResetStatus: ResetStatus,\n          Rechercherecette: Rechercherecette,\n          Recette: RecetteRecherche,\n          ListItem: ListItem,\n          ListeCarte: ListeCarte,\n          RefreshPage: GetListeRecette,\n          Status: RequestStatus,\n          RequestStatusFrom: RequestStatusFrom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/BDP\",\n        children: /*#__PURE__*/_jsxDEV(DBPage, {\n          ListItem: ListItem,\n          ListeCarte: ListeCarte,\n          ListeRecette: ListeRecette,\n          GetRecetteWithItem: GetRecetteWithItem,\n          AddCarte: AddCarte,\n          GetRecetteWithCarte: GetRecetteWithCarte,\n          DeleteItem: DeleteItem,\n          ModifItem: ModifItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manager, \"Y1XtiNy0VxTVqhKNnmRtYd+Ww3M=\");\n\n_c = Manager;\nexport default Manager;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manager\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Desktop/DEV/Projet js/site dofus temporise 5/src/Manager.js"],"names":["HomePage","useState","useEffect","DBPage","BrowserRouter","Router","Switch","Route","Manager","RecetteRecherche","setRecetteRecherche","ListItem","setListItem","ListeCarte","setListeCarte","RequestStatus","setRequestStatus","RequestStatusFrom","setRequestStatusFrom","ListeRecette","setListeRecette","NbrRequest","setNbrRequest","GetListItem","GetListCarte","GetListeRecette","fetch","method","headers","then","res","json","items","forEach","element","name","replaceAll","Carte","NewCraft","Craft","body","JSON","stringify","console","log","Api","statut","Url","listeCraft","AddCarte","Param","GetRecetteWithCarte","GetRecetteWithItem","ResetStatus","Rechercherecette","Item","DeleteItem","ModifItem"],"mappings":"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","sourcesContent":["import HomePage from \"./Pages/HomePage\"\r\nimport { useState,useEffect} from 'react';\r\nimport DBPage from \"./Pages/DBPage\"\r\nimport {  BrowserRouter as Router, Switch, Route,} from \"react-router-dom\";\r\n\r\n\r\nfunction Manager() {\r\n  const [RecetteRecherche, setRecetteRecherche] = useState([]);\r\n  const [ListItem, setListItem] = useState([]);\r\n  const [ListeCarte, setListeCarte] = useState([]);\r\n  \r\n  const [RequestStatus, setRequestStatus] = useState(0);\r\n  const [RequestStatusFrom, setRequestStatusFrom] = useState('');\r\n  const [ListeRecette, setListeRecette] = useState([]);\r\n  const [NbrRequest, setNbrRequest] = useState(0);\r\n  \r\n  // body: JSON.stringify({ title: 'React POST Request Example' })\r\n\r\n  useEffect(() => {\r\n    GetListItem()\r\n    GetListCarte()\r\n    GetListeRecette(\"GetNewCraft/\");\r\n  }, [])\r\n  async function GetListItem()\r\n  {\r\n    fetch('http://localhost:8888/GetItemDTO/', {\r\n      method: 'get',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n    }).then(res=>res.json())\r\n    .then(function(res){\r\n      // res.items.\r\n      res.items.forEach(element => {\r\n        element.name=element.name.replaceAll('_',' ')\r\n        // element.name.\r\n      });\r\n      setListItem(res.items)\r\n    });\r\n  }\r\n  async function GetListCarte()\r\n  {\r\n    fetch('http://localhost:8888/GetCarte/', {\r\n      method: 'post',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n    }).then(res=>res.json())\r\n    .then(function(res){\r\n      // res.items.\r\n      setListeCarte(res.Carte)\r\n    });\r\n  }\r\n\r\n  function NewCraft(Craft)\r\n  {\r\n    fetch('http://localhost:8888/AddCraft/', {\r\n        method: 'post',\r\n        headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n        body: JSON.stringify(Craft)\r\n      }).then(res=>res.json())\r\n      .then(function(res) \r\n      {\r\n        \r\n          console.log(res);  \r\n          setRequestStatusFrom(res.Api);\r\n          setRequestStatus(res.statut);\r\n          setNbrRequest(NbrRequest+1);\r\n      });\r\n  }\r\n  function GetListeRecette(Url)\r\n  {\r\n    fetch('http://localhost:8888/'+Url, {\r\n      method: 'get',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n    }).then(res=>res.json())\r\n    .then(function(res){\r\n      // res.items.\r\n      setListeRecette(res.listeCraft)\r\n    });\r\n  }\r\n  function AddCarte(Param)\r\n  {\r\n    fetch('http://localhost:8888/AddCarte/', {\r\n      method: 'post',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n      body: JSON.stringify(Param)\r\n    }).then(res=>res.json())\r\n    .then(function(res) \r\n    {\r\n      if(res.statut===200)\r\n      {\r\n        GetListCarte()\r\n      }\r\n    });\r\n  }\r\n  function GetRecetteWithCarte(Param)\r\n  {\r\n    fetch('http://localhost:8888/GetCraftCarte/', {\r\n      method: 'post',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n      body: JSON.stringify(Param)\r\n    }).then(res=>res.json())\r\n    .then(function(res) \r\n    {\r\n      if(res.statut===200)\r\n      {\r\n         setListeRecette(res.listeCraft)\r\n      }\r\n      else\r\n        setListeRecette([])\r\n        \r\n    });\r\n  }\r\n  function GetRecetteWithItem(Param)\r\n  {\r\n    fetch('http://localhost:8888/GetCraft/', {\r\n      method: 'post',\r\n      headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n      body: JSON.stringify(Param)\r\n    }).then(res=>res.json())\r\n    .then(function(res) \r\n    {\r\n      if(res.statut===200)\r\n        setListeRecette(res.listeCraft)\r\n      else\r\n        setListeRecette([])\r\n    });\r\n  }\r\n  function ResetStatus(){setRequestStatus(0);}\r\n  function Rechercherecette(Item)\r\n  {\r\n    fetch('http://localhost:8888/GetCraft/', {\r\n        method: 'post',\r\n        headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n        body: JSON.stringify(Item)\r\n      }).then(res=>res.json())\r\n      .then(function(res) \r\n      {\r\n        // if(RequestStatus===0)\r\n          console.log(res);  \r\n          if(res.statut!==400)\r\n          {\r\n            setRecetteRecherche(res.listeCraft[0])\r\n            console.log(res.listeCraft[0])\r\n          }\r\n            \r\n          setRequestStatusFrom(res.Api);\r\n          setRequestStatus(res.statut);\r\n          setNbrRequest(NbrRequest+1);\r\n      });\r\n  }\r\n  function DeleteItem(Item)\r\n  {\r\n    console.log(\"mqslkdfmqslkd\")\r\n    fetch('http://localhost:8888/DeleteCraft/', {\r\n        method: 'delete',\r\n        headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n        body: JSON.stringify(Item)\r\n      }).then(res=>res.json())\r\n      .then(function(res) \r\n      {\r\n        if(RequestStatus===0)\r\n        {\r\n          if(res.statut!==400)\r\n            GetListeRecette(\"GetNewCraft/\");\r\n        }\r\n      });\r\n  }\r\n  \r\n  function ModifItem(Item)\r\n  {\r\n    console.log(\"Modif item\")\r\n    fetch('http://localhost:8888/ChangeCtaft/', {\r\n        method: 'put',\r\n        headers: {'Accept': 'application/json, text/plain, */*','Content-Type': 'application/json'},\r\n        body: JSON.stringify(Item)\r\n      }).then(res=>res.json())\r\n      .then(function(res) \r\n      {\r\n          // if(res.statut!==400)\r\n          GetListeRecette(\"GetNewCraft/\");\r\n      });\r\n  }\r\n  // RefreshPage={GetListeRecette(\"GetNewCraft/\")}\r\n  return (\r\n    <Router>\r\n      <Switch> \r\n        <Route exact path=\"/\">\r\n            <HomePage NewCraft={NewCraft} NbrRequest={NbrRequest} ResetStatus={ResetStatus} Rechercherecette={Rechercherecette} \r\n            Recette={RecetteRecherche} ListItem={ListItem} ListeCarte={ListeCarte} RefreshPage={GetListeRecette}  Status={RequestStatus} RequestStatusFrom={RequestStatusFrom}/>\r\n        </Route>\r\n        <Route exact path=\"/BDP\">\r\n            <DBPage ListItem={ListItem} ListeCarte={ListeCarte} ListeRecette={ListeRecette} GetRecetteWithItem={GetRecetteWithItem}\r\n            AddCarte={AddCarte} GetRecetteWithCarte={GetRecetteWithCarte} DeleteItem={DeleteItem} ModifItem={ModifItem}/>\r\n        </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Manager;\r\n"]},"metadata":{},"sourceType":"module"}